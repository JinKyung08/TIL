day05

1.이중 for문

      for(초기식; 조건식; 증감식){
	for(초기식; 조건식; 증감식){
	
	}
      }

2. random
	randon( ) : 난수(실행시킨 때 마다 다른값이 나옴), 0이상 1미만 사이에 있는 값을 나타냄
		0=<random( ) <1 
	(int)(Math.random() * 구하려는 범위 )+처음 시작하는 숫자 <=실수를 정수로 만들어야함(형변환)

3. 배열
	*같은 타입(같은 자료형)*의 여러 변수를 하나의 묶으로 다루는 것 
	배열은 선언과 동시에 크기(공간)를 미리 지정해야 한다.
	한 번 선언된 배열의 크기는 변경 할 수 없다.
	
      형식1) 타입[] 참조변수명 = new 타입[ 배열의 길이];
		ex) int[] num = new int[5];

     형식2) 타입[] 참조변수명 ;
		참조변수명 = new 타입[배열의 길이] ;
		ex) int [] num ;
		    num = new int [5] ;

     형식3) 타입[] 참조변수명 = new 타입[]{ 값1, 값2,...} ;
		주의)[]안에 배열의 크기를 지정하지 않음, {}의 값을 통해 크기가 정해지기 때문
		ex) int[] = new int[] { 10, 20, 30, 40, 50};

     형식4) 타입[] 참조변수명 = { 값1, 값2,...} ;   /가능

		주의) 타입[] 참조변수명;
		참조변수명 = { 값1, 값2,....} 이렇게 할 수 없다.
 ===================1차원배열

     *향상된 for문(for each문) 
	배열 또는 컬렉션과 같이 다수의 원소를 가지고 있는 객체에서 원소를 하나씩 차례로
	꺼내는 기능을 반복적으로 수행
	for(원소의 자료형 변수명 : 묶음 참조자료형) {
		실행할 문장들

	}

5. 2차원 배열
	- 가로 및 세로 방향으로 정렬된 배열
	- 메모리는 데이터를 1차원으로만 저장 가능 
	- 2차원 데이터를 저장하기 위해서는 1차원( 행 단위)로 나누어 저장
	      2차원 배열은 1차원 배열의 배열임

      형식) 타입 [ ][ ] 찾조변수명 = new 타입 [행의 크기] [열의 크기] ;   //열의 크기 생략가능
	 타입 [ ][ ] 찾조변수명 = new 타입 [행의 크기] ;
		행의 길이 : 참조변수명.length
		열의 길이 : 참조변수명[인덱스].length